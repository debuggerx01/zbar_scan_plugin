// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings for `src/zbar_scan_plugin.h`.
///
/// Regenerate bindings with `flutter pub run ffigen --config ffigen.yaml`.
///
class ZbarScanPluginBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  ZbarScanPluginBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  ZbarScanPluginBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ScanResult scan(
    ffi.Pointer<ffi.Char> imagePath,
  ) {
    return _scan(
      imagePath,
    );
  }

  late final _scanPtr =
      _lookup<ffi.NativeFunction<ScanResult Function(ffi.Pointer<ffi.Char>)>>(
          'scan');
  late final _scan =
      _scanPtr.asFunction<ScanResult Function(ffi.Pointer<ffi.Char>)>();
}

class Point extends ffi.Struct {
  @ffi.Int()
  external int x;

  @ffi.Int()
  external int y;
}

class Code extends ffi.Struct {
  external ffi.Pointer<ffi.Char> content;

  @ffi.UnsignedInt()
  external int pointsCount;

  external ffi.Pointer<Point> points;
}

class ScanResult extends ffi.Struct {
  @ffi.UnsignedInt()
  external int codesCount;

  external ffi.Pointer<Code> codes;
}
